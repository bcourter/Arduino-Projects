// Face
typedef struct {
  byte antipode;
  byte vertices[5];
  byte edges[5];
} Face;

Face getFace(int f);  // need to declare prototype when returning struct

const Face faces[12] PROGMEM = {
  {11, {0, 1, 2, 3, 4}, {0, 1, 2, 3, 4}},
  {10, {0, 6, 12, 7, 1}, {5, 11, 17, 6, 0}},
  {6, {1, 7, 13, 8, 2}, {6, 12, 18, 7, 1}},
  {7, {2, 8, 14, 9, 3}, {7, 13, 19, 8, 2}},
  {8, {3, 9, 10, 5, 4}, {8, 14, 15, 9, 3}},
  {9, {4, 5, 11, 6, 0}, {9, 10, 16, 5, 4}},
  {2, {5, 10, 16, 17, 11}, {15, 20, 26, 21, 10}},
  {3, {6, 11, 17, 18, 12}, {16, 21, 27, 22, 11}},
  {4, {7, 12, 18, 19, 13}, {17, 22, 28, 23, 12}},
  {5, {8, 13, 19, 15, 14}, {18, 23, 29, 24, 13}},
  {1, {9, 14, 15, 16, 10}, {19, 24, 25, 20, 14}},
  {0, {15, 19, 18, 17, 16}, {29, 28, 27, 26, 25}}
};

// Edge
typedef struct {
  byte led; // index in strand
  byte z; // [0, 8]
  byte angle; // [0, 19]
  byte vertices[2];
} Edge;

const Edge edges[30] PROGMEM = { // in order of id
  {0, 48, 7, {0, 1}},
  {1, 46, 7, {1, 2}},
  {2, 44, 7, {2, 3}},
  {3, 42, 7, {3, 4}},
  {4, 40, 7, {0, 4}},
  {5, 39, 6, {0, 6}},
  {6, 38, 6, {1, 7}},
  {7, 37, 6, {2, 8}},
  {8, 36, 6, {3, 9}},
  {9, 35, 6, {4, 5}},
  {10, 34, 5, {5, 11}},
  {11, 32, 5, {6, 12}},
  {12, 30, 5, {7, 13}},
  {13, 28, 5, {8, 14}},
  {14, 26, 5, {9, 10}},
  {15, 23, 4, {5, 10}},
  {16, 21, 4, {6, 11}},
  {17, 19, 4, {7, 12}},
  {18, 17, 4, {8, 13}},
  {19, 15, 4, {9, 14}},
  {20, 14, 2, {10, 16}},
  {21, 13, 2, {11, 17}},
  {22, 12, 2, {12, 18}},
  {23, 11, 2, {13, 19}},
  {24, 10, 2, {14, 15}},
  {25, 8, 0, {15, 16}},
  {26, 6, 0, {16, 17}},
  {27, 4, 0, {17, 18}},
  {28, 2, 0, {18, 19}},
  {29, 0, 0, {15, 19}}
};

Edge getEdge(int e);  // need to declare prototype when returning struct

// Vertex
typedef struct {
  byte led; // index in strand
  byte z; // [0, 8]
  byte angle; // [0, 19]
  byte edges[3]; // IDs of edges
} Vertex;

const Vertex vertices[20] PROGMEM = { // in order of id
  {49, 8, 0, {0, 4, 5}},
  {47, 8, 4, {0, 1, 6}},
  {45, 8, 8, {1, 2, 7}},
  {43, 8, 12, {2, 3, 8}},
  {41, 8, 16, {3, 4, 9}},
  {25, 4, 16, {10, 15, 9}},
  {33, 4, 0, {11, 16, 5}},
  {31, 4, 4, {12, 17, 6}},
  {29, 4, 8, {13, 18, 7}},
  {27, 4, 12, {14, 19, 8}},
  {24, 3, 14, {14, 15, 20}},
  {22, 3, 18, {10, 16, 21}},
  {20, 3, 2, {11, 17, 22}},
  {18, 3, 6, {12, 18, 23}},
  {16, 3, 10, {13, 19, 24}},
  {9, 1, 10, {24, 25, 29}},
  {7, 1, 14, {20, 25, 26}},
  {5, 1, 18, {21, 26, 27}},
  {3, 1, 2, {22, 27, 28}},
  {1, 1, 6, {23, 28, 29}}
};

Vertex getVertex(int v); // need to declare prototype when returning struct

// Tetrahedron
typedef struct {
  byte vertices[4];
  byte edges[6];
} Tetrahedron;

const Tetrahedron tetrahedra[20] PROGMEM = { // two parities first and second halves
  {{0, 8, 10, 18}, {1, 9, 11, 19, 23, 26}},
  {{1, 9, 11, 19}, {2, 5, 12, 15, 24, 27}},
  {{2, 5, 12, 15}, {3, 6, 13, 16, 20, 28}},
  {{3, 6, 13, 16}, {4, 7, 14, 17, 21, 29}},
  {{4, 7, 14, 17}, {0, 8, 10, 18, 22, 25}},
  {{0, 9, 17, 13}, {3, 16, 6, 20, 13, 28}},
  {{1, 5, 18, 14}, {4, 17, 7, 21, 14, 29}},
  {{2, 6, 19, 10}, {0, 18, 8, 22, 10, 25}},
  {{3, 7, 15, 11}, {1, 19, 9, 23, 11, 26}},
  {{4, 8, 16, 12}, {2, 15, 5, 24, 12, 27}}
};

Tetrahedron getTetrahedron(int t);  // need to declare prototype when returning struct


